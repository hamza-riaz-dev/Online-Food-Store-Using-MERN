{"ast":null,"code":"const reducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD\":\n      return [...state, {\n        id: action.id,\n        name: action.name,\n        qty: action.qty,\n        size: action.size,\n        price: action.price,\n        img: action.img\n      }];\n    case \"REMOVE\":\n      let newArr = [...state];\n      newArr.splice(action.index, 1);\n      return newArr;\n    case \"DROP\":\n      let empArray = [];\n      return empArray;\n    case \"UPDATE\":\n      let arr = [...state];\n      arr.find((food, index) => {\n        if (food.id === action.id) {\n          console.log(food.qty, parseInt(action.qty), action.price + food.price);\n          arr[index] = {\n            ...food,\n            qty: parseInt(action.qty) + food.qty,\n            price: action.price + food.price\n          };\n        }\n        return arr;\n      });\n      return arr;\n    default:\n      console.log(\"Error in Reducer\");\n  }\n};","map":{"version":3,"names":["reducer","state","action","type","id","name","qty","size","price","img","newArr","splice","index","empArray","arr","find","food","console","log","parseInt"],"sources":["C:/Users/Waqas Anjum/Desktop/React/FinalProject01/src/Components/ContextReducer.js"],"sourcesContent":["const reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"ADD\":\r\n            return [...state, { id: action.id, name: action.name, qty: action.qty, size: action.size, price: action.price, img: action.img }]\r\n        case \"REMOVE\":\r\n            let newArr = [...state]\r\n            newArr.splice(action.index, 1)\r\n            return newArr;\r\n        case \"DROP\":\r\n            let empArray = []\r\n            return empArray\r\n        case \"UPDATE\":\r\n            let arr = [...state]\r\n            arr.find((food, index) => {\r\n                if (food.id === action.id) {\r\n                    console.log(food.qty, parseInt(action.qty), action.price + food.price)\r\n                    arr[index] = { ...food, qty: parseInt(action.qty) + food.qty, price: action.price + food.price }\r\n                }\r\n                return arr\r\n            })\r\n            return arr\r\n        default:\r\n            console.log(\"Error in Reducer\");\r\n    }\r\n};\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC/B,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,KAAK;MACN,OAAO,CAAC,GAAGF,KAAK,EAAE;QAAEG,EAAE,EAAEF,MAAM,CAACE,EAAE;QAAEC,IAAI,EAAEH,MAAM,CAACG,IAAI;QAAEC,GAAG,EAAEJ,MAAM,CAACI,GAAG;QAAEC,IAAI,EAAEL,MAAM,CAACK,IAAI;QAAEC,KAAK,EAAEN,MAAM,CAACM,KAAK;QAAEC,GAAG,EAAEP,MAAM,CAACO;MAAI,CAAC,CAAC;IACrI,KAAK,QAAQ;MACT,IAAIC,MAAM,GAAG,CAAC,GAAGT,KAAK,CAAC;MACvBS,MAAM,CAACC,MAAM,CAACT,MAAM,CAACU,KAAK,EAAE,CAAC,CAAC;MAC9B,OAAOF,MAAM;IACjB,KAAK,MAAM;MACP,IAAIG,QAAQ,GAAG,EAAE;MACjB,OAAOA,QAAQ;IACnB,KAAK,QAAQ;MACT,IAAIC,GAAG,GAAG,CAAC,GAAGb,KAAK,CAAC;MACpBa,GAAG,CAACC,IAAI,CAAC,CAACC,IAAI,EAAEJ,KAAK,KAAK;QACtB,IAAII,IAAI,CAACZ,EAAE,KAAKF,MAAM,CAACE,EAAE,EAAE;UACvBa,OAAO,CAACC,GAAG,CAACF,IAAI,CAACV,GAAG,EAAEa,QAAQ,CAACjB,MAAM,CAACI,GAAG,CAAC,EAAEJ,MAAM,CAACM,KAAK,GAAGQ,IAAI,CAACR,KAAK,CAAC;UACtEM,GAAG,CAACF,KAAK,CAAC,GAAG;YAAE,GAAGI,IAAI;YAAEV,GAAG,EAAEa,QAAQ,CAACjB,MAAM,CAACI,GAAG,CAAC,GAAGU,IAAI,CAACV,GAAG;YAAEE,KAAK,EAAEN,MAAM,CAACM,KAAK,GAAGQ,IAAI,CAACR;UAAM,CAAC;QACpG;QACA,OAAOM,GAAG;MACd,CAAC,CAAC;MACF,OAAOA,GAAG;IACd;MACIG,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;EACvC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}